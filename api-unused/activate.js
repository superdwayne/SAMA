const { validateMagicLink } = require('./utils/magic-links');\nconst fs = require('fs/promises');\nconst path = require('path');\n\n// Store activated tokens\nconst tokensPath = path.join(process.cwd(), 'tokens.json');\n\nasync function storeToken(token, data) {\n  let tokens = {};\n  try {\n    const content = await fs.readFile(tokensPath, 'utf8');\n    tokens = JSON.parse(content);\n  } catch (err) {\n    // File doesn't exist, start fresh\n  }\n  tokens[token] = data;\n  await fs.writeFile(tokensPath, JSON.stringify(tokens, null, 2));\n}\n\nmodule.exports = async (req, res) => {\n  // Enable CORS\n  res.setHeader('Access-Control-Allow-Origin', '*');\n  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');\n  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');\n  \n  if (req.method === 'OPTIONS') {\n    return res.status(200).end();\n  }\n  \n  const { token, email } = req.query;\n  \n  console.log('\ud83d\udd17 Magic link activation attempt');\n  console.log('\ud83d\udce7 Email:', email);\n  console.log('\ud83d\udd11 Token:', token ? token.substring(0, 8) + '...' : 'missing');\n  \n  if (!token || !email) {\n    return res.status(400).json({\n      success: false,\n      error: 'Missing token or email parameter'\n    });\n  }\n  \n  try {\n    // Validate magic link\n    const result = await validateMagicLink(token, email);\n    \n    if (!result.valid) {\n      console.log('\u274c Magic link validation failed:', result.error);\n      return res.status(400).json({\n        success: false,\n        error: result.error\n      });\n    }\n    \n    // Store the activated access token\n    await storeToken(result.accessToken, {\n      email: email,\n      region: result.region,\n      status: 'active',\n      activatedAt: Date.now(),\n      expiresAt: result.expiresAt,\n      activatedVia: 'magic_link'\n    });\n    \n    console.log('\u2705 Magic link activated successfully');\n    console.log('\ud83c\udf86 Access token stored:', result.accessToken.substring(0, 8) + '...');\n    \n    // Return success with redirect info\n    return res.json({\n      success: true,\n      message: 'Access activated successfully!',\n      region: result.region,\n      accessToken: result.accessToken,\n      expiresAt: result.expiresAt\n    });\n    \n  } catch (error) {\n    console.error('\u274c Activation error:', error);\n    return res.status(500).json({\n      success: false,\n      error: 'Failed to activate access'\n    });\n  }\n};\n