import React, { useState, useEffect } from 'react';\nimport { fetchMapboxDataset, addLocationToDataset, updateLocationInDataset, deleteLocationFromDataset } from '../utils/mapboxData';\nimport './MapboxAdmin.css';\n\nconst MapboxAdmin = () => {\n  const [locations, setLocations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [editingLocation, setEditingLocation] = useState(null);\n  const [newLocation, setNewLocation] = useState({\n    title: '',\n    artist: '',\n    description: '',\n    type: 'artwork',\n    district: 'Centre',\n    latitude: '',\n    longitude: '',\n    address: '',\n    year: '',\n    image: ''\n  });\n\n  // Load locations on component mount\n  useEffect(() => {\n    loadLocations();\n  }, []);\n\n  const loadLocations = async () => {\n    setLoading(true);\n    try {\n      const data = await fetchMapboxDataset();\n      setLocations(data);\n    } catch (error) {\n      console.error('Error loading locations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddLocation = async (e) => {\n    e.preventDefault();\n    try {\n      await addLocationToDataset({\n        ...newLocation,\n        latitude: parseFloat(newLocation.latitude),\n        longitude: parseFloat(newLocation.longitude)\n      });\n      \n      setNewLocation({\n        title: '',\n        artist: '',\n        description: '',\n        type: 'artwork',\n        district: 'Centre',\n        latitude: '',\n        longitude: '',\n        address: '',\n        year: '',\n        image: ''\n      });\n      setShowAddForm(false);\n      await loadLocations(); // Reload data\n      alert('Location added successfully!');\n    } catch (error) {\n      console.error('Error adding location:', error);\n      alert('Error adding location. Check console for details.');\n    }\n  };\n\n  const handleDeleteLocation = async (locationId) => {\n    if (window.confirm('Are you sure you want to delete this location?')) {\n      try {\n        await deleteLocationFromDataset(locationId);\n        await loadLocations(); // Reload data\n        alert('Location deleted successfully!');\n      } catch (error) {\n        console.error('Error deleting location:', error);\n        alert('Error deleting location. Check console for details.');\n      }\n    }\n  };\n\n  const handleInputChange = (field, value) => {\n    setNewLocation(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Get coordinates from URL (for convenience)\n  const extractCoordsFromUrl = (url) => {\n    const match = url.match(/@(-?\\d+\\.\\d+),(-?\\d+\\.\\d+)/);\n    if (match) {\n      setNewLocation(prev => ({\n        ...prev,\n        latitude: match[1],\n        longitude: match[2]\n      }));\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"mapbox-admin\">\n        <div className=\"loading\">Loading Mapbox dataset...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"mapbox-admin\">\n      <div className=\"admin-header\">\n        <h1>üó∫Ô∏è Mapbox Dataset Manager</h1>\n        <p>Dataset ID: <code>cmc35wyju1dgt1ms3u19ozf6e</code></p>\n        <div className=\"admin-stats\">\n          <span>Total Locations: {locations.length}</span>\n        </div>\n      </div>\n\n      <div className=\"admin-actions\">\n        <button \n          className=\"add-btn\"\n          onClick={() => setShowAddForm(!showAddForm)}\n        >\n          {showAddForm ? '‚ùå Cancel' : '‚ûï Add New Location'}\n        </button>\n        <button \n          className=\"refresh-btn\"\n          onClick={loadLocations}\n        >\n          üîÑ Refresh Data\n        </button>\n      </div>\n\n      {showAddForm && (\n        <div className=\"add-form-container\">\n          <h2>Add New Street Art Location</h2>\n          <form onSubmit={handleAddLocation} className=\"add-form\">\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>Title*</label>\n                <input\n                  type=\"text\"\n                  value={newLocation.title}\n                  onChange={(e) => handleInputChange('title', e.target.value)}\n                  placeholder=\"Artwork or location name\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Artist*</label>\n                <input\n                  type=\"text\"\n                  value={newLocation.artist}\n                  onChange={(e) => handleInputChange('artist', e.target.value)}\n                  placeholder=\"Artist name\"\n                  required\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Description</label>\n              <textarea\n                value={newLocation.description}\n                onChange={(e) => handleInputChange('description', e.target.value)}\n                placeholder=\"Description of the artwork or location\"\n                rows={3}\n              />\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>Type*</label>\n                <select\n                  value={newLocation.type}\n                  onChange={(e) => handleInputChange('type', e.target.value)}\n                >\n                  <option value=\"artwork\">üñºÔ∏è Artwork</option>\n                  <option value=\"gallery\">üèõÔ∏è Gallery</option>\n                  <option value=\"museum\">üèõÔ∏è Museum</option>\n                  <option value=\"legal-wall\">üé® Legal Wall</option>\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label>District*</label>\n                <select\n                  value={newLocation.district}\n                  onChange={(e) => handleInputChange('district', e.target.value)}\n                >\n                  <option value=\"Centre\">Centre</option>\n                  <option value=\"North\">North</option>\n                  <option value=\"South\">South</option>\n                  <option value=\"East\">East</option>\n                  <option value=\"West\">West</option>\n                  <option value=\"Nieuw-West\">Nieuw-West</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"coordinates-section\">\n              <h3>üìç Location Coordinates</h3>\n              <div className=\"coordinates-helper\">\n                <p>üí° <strong>Quick tip:</strong> Copy Google Maps URL and paste here to extract coordinates:</p>\n                <input\n                  type=\"text\"\n                  placeholder=\"Paste Google Maps URL here (e.g., https://goo.gl/maps/...)\"\n                  onChange={(e) => extractCoordsFromUrl(e.target.value)}\n                  className=\"url-helper\"\n                />\n              </div>\n              \n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label>Latitude*</label>\n                  <input\n                    type=\"number\"\n                    step=\"any\"\n                    value={newLocation.latitude}\n                    onChange={(e) => handleInputChange('latitude', e.target.value)}\n                    placeholder=\"52.3745\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Longitude*</label>\n                  <input\n                    type=\"number\"\n                    step=\"any\"\n                    value={newLocation.longitude}\n                    onChange={(e) => handleInputChange('longitude', e.target.value)}\n                    placeholder=\"4.8925\"\n                    required\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>Address</label>\n                <input\n                  type=\"text\"\n                  value={newLocation.address}\n                  onChange={(e) => handleInputChange('address', e.target.value)}\n                  placeholder=\"Street address\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Year</label>\n                <input\n                  type=\"text\"\n                  value={newLocation.year}\n                  onChange={(e) => handleInputChange('year', e.target.value)}\n                  placeholder=\"2024\"\n                />\n              </div>\n            </div>\n\n            <div className=\"form-actions\">\n              <button type=\"submit\" className=\"submit-btn\">\n                ‚úÖ Add to Mapbox Dataset\n              </button>\n              <button \n                type=\"button\" \n                className=\"cancel-btn\"\n                onClick={() => setShowAddForm(false)}\n              >\n                ‚ùå Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      <div className=\"locations-list\">\n        <h2>Current Locations ({locations.length})</h2>\n        {locations.length === 0 ? (\n          <div className=\"empty-state\">\n            <p>No locations found in your Mapbox dataset.</p>\n            <p>Add your first location using the form above!</p>\n          </div>\n        ) : (\n          <div className=\"locations-grid\">\n            {locations.map((location, index) => (\n              <div key={location.id || index} className=\"location-card\">\n                <div className=\"location-header\">\n                  <h3>{location.title}</h3>\n                  <div className=\"location-type\">\n                    {location.type === 'artwork' && 'üñºÔ∏è'}\n                    {location.type === 'gallery' && 'üèõÔ∏è'}\n                    {location.type === 'museum' && 'üèõÔ∏è'}\n                    {location.type === 'legal-wall' && 'üé®'}\n                    {location.type}\n                  </div>\n                </div>\n                \n                <div className=\"location-details\">\n                  <p><strong>Artist:</strong> {location.artist}</p>\n                  <p><strong>District:</strong> {location.district}</p>\n                  <p><strong>Coordinates:</strong> {location.latitude}, {location.longitude}</p>\n                  {location.address && <p><strong>Address:</strong> {location.address}</p>}\n                  {location.year && <p><strong>Year:</strong> {location.year}</p>}\n                  {location.description && (\n                    <p><strong>Description:</strong> {location.description}</p>\n                  )}\n                </div>\n\n                <div className=\"location-actions\">\n                  <button \n                    className=\"view-btn\"\n                    onClick={() => window.open(`https://www.google.com/maps?q=${location.latitude},${location.longitude}`, '_blank')}\n                  >\n                    üó∫Ô∏è View on Map\n                  </button>\n                  <button \n                    className=\"delete-btn\"\n                    onClick={() => handleDeleteLocation(location.id)}\n                  >\n                    üóëÔ∏è Delete\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MapboxAdmin;